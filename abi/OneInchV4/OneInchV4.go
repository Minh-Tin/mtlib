// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package OneInchV4

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AggregationRouterV4SwapDescription is an auto generated low-level Go binding around an user-defined struct.
type AggregationRouterV4SwapDescription struct {
	SrcToken        common.Address
	DstToken        common.Address
	SrcReceiver     common.Address
	DstReceiver     common.Address
	Amount          *big.Int
	MinReturnAmount *big.Int
	Flags           *big.Int
	Permit          []byte
}

// LimitOrderProtocolRFQOrderRFQ is an auto generated low-level Go binding around an user-defined struct.
type LimitOrderProtocolRFQOrderRFQ struct {
	Info          *big.Int
	MakerAsset    common.Address
	TakerAsset    common.Address
	Maker         common.Address
	AllowedSender common.Address
	MakingAmount  *big.Int
	TakingAmount  *big.Int
}

// OneInchV4MetaData contains all meta data concerning the OneInchV4 contract.
var OneInchV4MetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"contractIClipperExchangeInterface\",\"name\":\"_clipperExchange\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"}],\"name\":\"OrderFilledRFQ\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIMIT_ORDER_RFQ_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderInfo\",\"type\":\"uint256\"}],\"name\":\"cancelOrderRFQ\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"}],\"name\":\"clipperSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"}],\"name\":\"clipperSwapTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"clipperSwapToWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"makerAsset\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"takerAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"internalType\":\"structLimitOrderProtocolRFQ.OrderRFQ\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"name\":\"fillOrderRFQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"makerAsset\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"takerAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"internalType\":\"structLimitOrderProtocolRFQ.OrderRFQ\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"fillOrderRFQTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"makerAsset\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"takerAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"allowedSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"}],\"internalType\":\"structLimitOrderProtocolRFQ.OrderRFQ\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"fillOrderRFQToWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"invalidatorForOrderRFQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIAggregationExecutor\",\"name\":\"caller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"srcReceiver\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"dstReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"internalType\":\"structAggregationRouterV4.SwapDescription\",\"name\":\"desc\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLeft\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"pools\",\"type\":\"uint256[]\"}],\"name\":\"uniswapV3Swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"pools\",\"type\":\"uint256[]\"}],\"name\":\"uniswapV3SwapTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"pools\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapToWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"pools\",\"type\":\"bytes32[]\"}],\"name\":\"unoswap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReturn\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"pools\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"permit\",\"type\":\"bytes\"}],\"name\":\"unoswapWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6080604052600436106101795760003560e01c80638da5cb5b116100cb578063bc80f1a81161007f578063e449022e11610059578063e449022e146103d6578063f2fde38b146103e9578063fa461e3314610409576101c3565b8063bc80f1a814610390578063d0a3b665146103a3578063d6a92a5d146103b6576101c3565b8063a1251d75116100b0578063a1251d751461034a578063b04311821461036a578063baba58551461037d576101c3565b80638da5cb5b146103155780639994dd1514610337576101c3565b806356f161241161012d5780637c025200116101075780637c025200146102be578063825caba1146102e057806383197ef014610300576101c3565b806356f1612414610269578063715018a61461028957806378e3214f1461029e576101c3565b80632e95b6c81161015e5780632e95b6c8146102135780633644e515146102265780634cc4a27b1461023b576101c3565b806306bf53d0146101c85780632521b930146101f3576101c3565b366101c357333214156101c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614bf4565b60405180910390fd5b005b600080fd5b3480156101d457600080fd5b506101dd610429565b6040516101ea91906146e1565b60405180910390f35b3480156101ff57600080fd5b506101dd61020e366004613eeb565b61044d565b6101dd610221366004614146565b610474565b34801561023257600080fd5b506101dd6109c5565b34801561024757600080fd5b5061025b610256366004614329565b6109d5565b6040516101ea9291906148ac565b34801561027557600080fd5b506101dd610284366004613ff8565b610a06565b34801561029557600080fd5b506101c1610a3e565b3480156102aa57600080fd5b506101c16102b9366004613ff8565b610b20565b6102d16102cc366004614083565b610bb8565b6040516101ea939291906151d6565b3480156102ec57600080fd5b506101c16102fb3660046143b3565b611044565b34801561030c57600080fd5b506101c1611051565b34801561032157600080fd5b5061032a6110c7565b6040516101ea91906146ea565b6101dd610345366004613e04565b6110e3565b34801561035657600080fd5b506101dd61036536600461415d565b611993565b6101dd610378366004614101565b6119b9565b61025b61038b3660046142ac565b6119d3565b6101dd61039e366004613f90565b612109565b61025b6103b1366004614245565b612498565b3480156103c257600080fd5b506101dd6103d1366004613e5e565b6124b7565b6101dd6103e43660046143e3565b6124d1565b3480156103f557600080fd5b506101c1610404366004613de8565b6124e0565b34801561041557600080fd5b506101c1610424366004614200565b61262d565b7f74ab4f0cde46aaf927859983f7d04002116dd057d4c4941f6dbfb775c3e31f4581565b600061045a888484612848565b6104678988888888612109565b9998505050505050505050565b60006105df565b3d6000803e3d6000fd5b7f08c379a0000000000000000000000000000000000000000000000000000000006000527c200000000000000000000000000000000000000000000000000000000060205280604052816000fd5b60007f0902f1ac000000000000000000000000000000000000000000000000000000008252604082600484875afa61050d5761050d61047b565b60603d1461053d5761053d60597c1472657365727665732063616c6c206661696c65640000000000000000610485565b81516020830151861561054c57905b7f022c0d9f000000000000000000000000000000000000000000000000000000008452878502633b9aca00929092028201910204905084801561059b57816004840152600060248401526105a9565b600060048401528160248401525b50866044830152608060648301526000608483015260008060a4846000885af16105d5576105d561047b565b9695505050505050565b60405160c08101604052600460643501803560208201915080602002820190508135896000811461069f5734156106385761063860557c11696e76616c6964206d73672e76616c75650000000000000000000000610485565b7f23b872dd00000000000000000000000000000000000000000000000000000000855233600486015273ffffffffffffffffffffffffffffffffffffffff8216602486015289604486015260008060648760008f5af161069a5761069a61047b565b61078b565b348a146106ce576106ce60557c11696e76616c6964206d73672e76616c75650000000000000000000000610485565b7fd0e30db00000000000000000000000000000000000000000000000000000000085526000806004878d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161071b5761071b61047b565b7fa9059cbb00000000000000000000000000000000000000000000000000000000855273ffffffffffffffffffffffffffffffffffffffff82166004860152896024860152600080604487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af161078b5761078b61047b565b50889450602083015b8281101561082357803561081773ffffffffffffffffffffffffffffffffffffffff821677ffffffff0000000000000000000000000000000000000000851660a01c7f8000000000000000000000000000000000000000000000000000000000000000861673ffffffffffffffffffffffffffffffffffffffff87168b8b6104d3565b96509150602001610794565b507f400000000000000000000000000000000000000000000000000000000000000081168015610921576108b03077ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff86168a8a6104d3565b95507f2e1a7d4d000000000000000000000000000000000000000000000000000000008552856004860152600080602487600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16109065761090661047b565b60008060008089335af161091c5761091c61047b565b610987565b6109843377ffffffff0000000000000000000000000000000000000000841660a01c7f8000000000000000000000000000000000000000000000000000000000000000851673ffffffffffffffffffffffffffffffffffffffff86168a8a6104d3565b95505b5050505050838110156109bc576109bc605a7c164d696e2072657475726e206e6f742072656163686564000000000000610485565b95945050505050565b60006109cf612a02565b90505b90565b6000806109e78a604001518585612848565b6109f58a8a8a8a8a8a6119d3565b915091509850989650505050505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602090815260408083208484529091529020545b92915050565b610a46612acc565b73ffffffffffffffffffffffffffffffffffffffff16610a646110c7565b73ffffffffffffffffffffffffffffffffffffffff1614610ab1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614ec1565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610b28612acc565b73ffffffffffffffffffffffffffffffffffffffff16610b466110c7565b73ffffffffffffffffffffffffffffffffffffffff1614610b93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614ec1565b610bb473ffffffffffffffffffffffffffffffffffffffff83163383612ad0565b5050565b6000806000808660a0013511610bfa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614e2d565b83610c31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b89061519f565b60c08601356000610c456020890189613de8565b90506000610c5960408a0160208b01613de8565b90506000610c7c8373ffffffffffffffffffffffffffffffffffffffff16612b4e565b90506002841615610cd65780610c93576000610c99565b89608001355b3411610cd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614c2b565b610d20565b80610ce2576000610ce8565b89608001355b3414610d20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614c2b565b80610d7257610d3b83610d3660e08d018d6151ec565b612848565b610d7233610d4f60608d0160408e01613de8565b73ffffffffffffffffffffffffffffffffffffffff8616919060808e0135612ba4565b604051600090610dae907f2636f7f80000000000000000000000000000000000000000000000000000000090839033908e908e90602001614472565b60405160208183030381529060405290506000808d73ffffffffffffffffffffffffffffffffffffffff163484604051610de8919061453f565b60006040518083038185875af1925050503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b509150915081610ea657610e73816040518060400160405280601281526020017f63616c6c4279746573206661696c65643a200000000000000000000000000000815250612c4d565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8919061495e565b50505060808a01359550610ed073ffffffffffffffffffffffffffffffffffffffff831630612df8565b96506001841615610f8c576000610efd73ffffffffffffffffffffffffffffffffffffffff851630612df8565b90508015610f3257610f0f8782612ecf565b9650610f3273ffffffffffffffffffffffffffffffffffffffff85163383612ad0565b610f4060a08c013588612f11565b610f4e8960808e0135612f11565b1015610f86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614df6565b50610fca565b8960a00135871015610fca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614df6565b600080610fdd60808d0160608e01613de8565b73ffffffffffffffffffffffffffffffffffffffff161461100d5761100860808c0160608d01613de8565b61100f565b335b905061103273ffffffffffffffffffffffffffffffffffffffff8416828a612ad0565b5a955050505050509450945094915050565b61104e3382612f6c565b50565b611059612acc565b73ffffffffffffffffffffffffffffffffffffffff166110776110c7565b73ffffffffffffffffffffffffffffffffffffffff16146110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614ec1565b33ff5b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6000807f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156112e8573415611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614a16565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc216906323b872dd906111e89033903090899060040161470b565b602060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123a9190614023565b506040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d906112ad9087906004016146e1565b600060405180830381600087803b1580156112c757600080fd5b505af11580156112db573d6000803e3d6000fd5b50505050600190506113be565b73ffffffffffffffffffffffffffffffffffffffff86166113445783341461133c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8906149a8565b5060016113be565b341561137c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614a16565b6113be73ffffffffffffffffffffffffffffffffffffffff8716337f000000000000000000000000e82906b6b1b04f631d126c974af57a3a7b6a99d987612ba4565b80156115295760405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000e82906b6b1b04f631d126c974af57a3a7b6a99d9169085156108fc029086906000818181858888f19350505050158015611427573d6000803e3d6000fd5b50604080518082018252600581527f31494e4348000000000000000000000000000000000000000000000000000000602082015290517fb52e845800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000002e9c6dcdca22a5952a88c4b18edb5b54c5155bc9169163b52e8458916114d09189918c9189916004016148d8565b602060405180830381600087803b1580156114ea57600080fd5b505af11580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152291906143cb565b9150611989565b7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156117c657604080518082018252600581527f31494e4348000000000000000000000000000000000000000000000000000000602082015290517f69be90ec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000002e9c6dcdca22a5952a88c4b18edb5b54c5155bc916916369be90ec91611625918a91309189916004016148d8565b602060405180830381600087803b15801561163f57600080fd5b505af1158015611653573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167791906143cb565b91507f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156116e157600080fd5b505af11580156116f5573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc216935063a9059cbb925061176e91508a90869060040161473c565b602060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c09190614023565b50611989565b73ffffffffffffffffffffffffffffffffffffffff851661188957604080518082018252600581527f31494e4348000000000000000000000000000000000000000000000000000000602082015290517f69be90ec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000002e9c6dcdca22a5952a88c4b18edb5b54c5155bc916916369be90ec916114d0918a918c9189916004016148d8565b604080518082018252600581527f31494e4348000000000000000000000000000000000000000000000000000000602082015290517f65d02b0400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000002e9c6dcdca22a5952a88c4b18edb5b54c5155bc916916365d02b0491611934918a918a918d918a9190600401614917565b602060405180830381600087803b15801561194e57600080fd5b505af1158015611962573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198691906143cb565b91505b5095945050505050565b60006119a0888484612848565b6119ad8888888888610474565b98975050505050505050565b60006119c833868686866110e3565b90505b949350505050565b606086015186517f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116808952600092839290917f8000000000000000000000000000000000000000000000000000000000000000821615159160401c67ffffffffffffffff16801580611a475750804211155b611a7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614af2565b611a878483612f6c565b505060a08a015160c08b015187158015611a9f575088155b15611aaf57819850809750611bbb565b87611b355781891115611aee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614a4d565b611b2e82611b287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201611b22858e612f11565b9061300a565b90613049565b9750611bbb565b88611b895780881115611b74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8906149df565b611b8281611b28848b612f11565b9850611bbb565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b89061509d565b5050600087118015611bcd5750600086115b611c03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890615009565b60808a015173ffffffffffffffffffffffffffffffffffffffff161580611c43575060808a015173ffffffffffffffffffffffffffffffffffffffff1633145b611c79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614f64565b6000611ccc7f74ab4f0cde46aaf927859983f7d04002116dd057d4c4941f6dbfb775c3e31f458c604051602001611cb1929190614836565b60405160208183030381529060405280519060200120613095565b9050611cda83828c8c6130ce565b7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168b6020015173ffffffffffffffffffffffffffffffffffffffff16148015611d365750815b15611e4f5760208b0151611d629073ffffffffffffffffffffffffffffffffffffffff1684308b612ba4565b6040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d90611dd4908b906004016146e1565b600060405180830381600087803b158015611dee57600080fd5b505af1158015611e02573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff891692508a156108fc0291508a906000818181858888f19350505050158015611e49573d6000803e3d6000fd5b50611e76565b60208b0151611e769073ffffffffffffffffffffffffffffffffffffffff1684888b612ba4565b7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168b6040015173ffffffffffffffffffffffffffffffffffffffff16148015611ed55750600034115b1561206057863414611f13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614a84565b7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0886040518263ffffffff1660e01b81526004016000604051808303818588803b158015611f7b57600080fd5b505af1158015611f8f573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc216935063a9059cbb9250612008915086908b9060040161473c565b602060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205a9190614023565b506120bf565b3415612098576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614a84565b60408b01516120bf9073ffffffffffffffffffffffffffffffffffffffff1633858a612ba4565b7fc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca7812781896040516120f09291906148ac565b60405180910390a1509599949850939650505050505050565b60008180612143576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614971565b8591507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81016000807f40000000000000000000000000000000000000000000000000000000000000008787838161219757fe5b90506020020135161190506000807f20000000000000000000000000000000000000000000000000000000000000008888868181106121d257fe5b905060200201351611905081156122a25788341461221c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8906150d4565b7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db08a6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561228457600080fd5b505af1158015612298573d6000803e3d6000fd5b50505050506122da565b34156122da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614abb565b60018411156123685761230e30836122f257336122f4565b305b8989600081811061230157fe5b90506020020135886132f3565b945060015b838110156123435761233930308a8a8581811061232c57fe5b90506020020135896132f3565b9550600101612313565b5061236181612352578a612354565b305b3089898781811061230157fe5b9450612386565b61238381612376578a612378565b305b836122f257336122f4565b94505b878510156123c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890615168565b801561248b576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d906124389088906004016146e1565b600060405180830381600087803b15801561245257600080fd5b505af1158015612466573d6000803e3d6000fd5b5061248b9250505073ffffffffffffffffffffffffffffffffffffffff8b16866134d5565b5050505095945050505050565b6000806124a98787878787336119d3565b915091509550959350505050565b60006124c4878484612848565b6119ad88888888886110e3565b60006119c83386868686612109565b6124e8612acc565b73ffffffffffffffffffffffffffffffffffffffff166125066110c7565b73ffffffffffffffffffffffffffffffffffffffff1614612553576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614ec1565b73ffffffffffffffffffffffffffffffffffffffff81166125a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614b29565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000807fff1f98431c8ad98523631ae4a59f267346ea31f98400000000000000000000007fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5482604051602081017f0dfe1681d21220a7ddca3f4300000000000000000000000000000000000000008252602081600484335afa6126b2576126b261047b565b805196506020816004808501335afa6126cd576126cd61047b565b80519550602081600460088501335afa6126e9576126e961047b565b51848252601582018781526035830187815260558085019390935260608220909152849052812073ffffffffffffffffffffffffffffffffffffffff163381146127555761275560547c10554e495633523a2062616420706f6f6c000000000000000000000000610485565b5060206084823751905060008913156127ce5773ffffffffffffffffffffffffffffffffffffffff81163014156127ac576127a773ffffffffffffffffffffffffffffffffffffffff8616338b6135b2565b6127ce565b6127ce73ffffffffffffffffffffffffffffffffffffffff861682338c612ba4565b600088131561283d5773ffffffffffffffffffffffffffffffffffffffff811630141561281b5761281673ffffffffffffffffffffffffffffffffffffffff8516338a6135b2565b61283d565b61283d73ffffffffffffffffffffffffffffffffffffffff851682338b612ba4565b505050505050505050565b80156129fd576000606060e083141561292d5760405173ffffffffffffffffffffffffffffffffffffffff8616906128a8907fd505accf000000000000000000000000000000000000000000000000000000009087908790602001614503565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526128e09161453f565b6000604051808303816000865af19150503d806000811461291d576040519150601f19603f3d011682016040523d82523d6000602084013e612922565b606091505b5090925090506129b6565b6101008314156129845760405173ffffffffffffffffffffffffffffffffffffffff8616906128a8907f8fcbaf0c000000000000000000000000000000000000000000000000000000009087908790602001614503565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614ef6565b816129fa57610e73816040518060400160405280600f81526020017f5065726d6974206661696c65643a200000000000000000000000000000000000815250612c4d565b50505b505050565b60007f0000000000000000000000000000000000000000000000000000000000000001612a2d6135d1565b1415612a5a57507f39821575e26f6b451072044840d9a68b6718f7a7770887d2b17a3b48f7147ca36109d2565b612ac57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f09e0ef248a1e7a4e46bf89bd2fef963b6335ca0b83fa96f22845053018a00d5d7fad7c5bef027816a800da1736444fb58a807ef4c9603b7848673f7e3a68eb14a56135d5565b90506109d2565b3390565b80156129fd57612adf83612b4e565b15612b2d5760405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f19350505050158015612b27573d6000803e3d6000fd5b506129fd565b6129fd73ffffffffffffffffffffffffffffffffffffffff841683836135b2565b600073ffffffffffffffffffffffffffffffffffffffff82161580612b9c575073ffffffffffffffffffffffffffffffffffffffff821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee145b90505b919050565b612c47846323b872dd60e01b858585604051602401612bc59392919061470b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613616565b50505050565b60606004835110612dc65760208301517fffffffff0000000000000000000000000000000000000000000000000000000081167f08c379a000000000000000000000000000000000000000000000000000000000148015612cb057506044845110155b15612d3557600060606024860151915081602401860190508051826024010186511015612d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614f2d565b8481604051602001612d1c92919061465f565b6040516020818303038152906040529350505050610a38565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f4e487b7100000000000000000000000000000000000000000000000000000000148015612d87575083516024145b15612dc457602484015183612d9b826136cc565b604051602001612dac92919061455b565b60405160208183030381529060405292505050610a38565b505b81612dd0846136f2565b604051602001612de19291906145dd565b604051602081830303815290604052905092915050565b6000612e0383612b4e565b15612e26575073ffffffffffffffffffffffffffffffffffffffff811631610a38565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906370a0823190612e789085906004016146ea565b60206040518083038186803b158015612e9057600080fd5b505afa158015612ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ec891906143cb565b9050610a38565b600082821115612f0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614c62565b50900390565b600082612f2057506000610a38565b82820282848281612f2d57fe5b0414612f65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614e64565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020818152604080842066ffffffffffffff600887901c1680865292819052932054909260ff85169290921b919080831615612ff2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614fd2565b60009384526020919091526040909220911790555050565b600082820183811015612f65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614b86565b6000808211613084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614d8a565b81838161308d57fe5b049392505050565b600061309f612a02565b826040516020016130b19291906146ab565b604051602081830303815290604052805190602001209050919050565b8373ffffffffffffffffffffffffffffffffffffffff166131258484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061392e92505050565b73ffffffffffffffffffffffffffffffffffffffff1614612c47576000808573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b868686604051602401613177939291906147e2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051613200919061453f565b600060405180830381855afa9150503d806000811461323b576040519150601f19603f3d011682016040523d82523d6000602084013e613240565b606091505b5091509150818015613253575080516020145b80156132b5575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906132919083016020908101908401614043565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b6132eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614bbd565b505050505050565b60007f800000000000000000000000000000000000000000000000000000000000000083161580156133f75760008473ffffffffffffffffffffffffffffffffffffffff1663128acb08888461334888613992565b6401000276a48b60405160200161335f91906146ea565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161338e959493929190614762565b6040805180830381600087803b1580156133a757600080fd5b505af11580156133bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133df91906141dd565b9150506133ee816000036139f1565b925050506119cb565b60008473ffffffffffffffffffffffffffffffffffffffff1663128acb08888461342088613992565b73fffd8963efd1fc6a506488495d951d5263988d258b60405160200161344691906146ea565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401613475959493929190614762565b6040805180830381600087803b15801561348e57600080fd5b505af11580156134a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c691906141dd565b5090506133ee816000036139f1565b8047101561350f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614cf6565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051613535906109d2565b60006040518083038185875af1925050503d8060008114613572576040519150601f19603f3d011682016040523d82523d6000602084013e613577565b606091505b50509050806129fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614c99565b6129fd8363a9059cbb60e01b8484604051602401612bc592919061473c565b4690565b60008383836135e26135d1565b306040516020016135f79594939291906147a9565b6040516020818303038152906040528051906020012090509392505050565b6000613678826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16613a2d9092919063ffffffff16565b8051909150156129fd57808060200190518101906136969190614023565b6129fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b89061510b565b6060612b9c826040516020016136e291906146e1565b6040516020818303038152906040525b80516060907f30313233343536373839616263646566000000000000000000000000000000009060009060029081020167ffffffffffffffff8111801561373857600080fd5b506040519080825280601f01601f191660200182016040528015613763576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061379457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106137f157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b84518110156139265782600486838151811061383b57fe5b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c60f81c6010811061387157fe5b1a60f81b82826002026002018151811061388757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350828582815181106138c357fe5b60209101015160f81c600f16601081106138d957fe5b1a60f81b8282600202600301815181106138ef57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101613823565b509392505050565b60008151604114156139625760208201516040830151606084015160001a61395886828585613a3c565b9350505050610a38565b81516040141561398a5760208201516040830151613981858383613b2a565b92505050610a38565b506000610a38565b60007f800000000000000000000000000000000000000000000000000000000000000082106139ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890615040565b5090565b6000808212156139ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614dc1565b60606119cb8484600085613b63565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115613a6e575060006119cb565b8360ff16601b14158015613a8657508360ff16601c14155b15613a93575060006119cb565b600060018686868660405160008152602001604052604051613ab894939291906148ba565b6020604051602081039080840390855afa158015613ada573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166119c85760009150506119cb565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821660ff83901c601b016105d586828785613a3c565b606082471015613b9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614d2d565b613ba885613c64565b613bde576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b890614f9b565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613c07919061453f565b60006040518083038185875af1925050503d8060008114613c44576040519150601f19603f3d011682016040523d82523d6000602084013e613c49565b606091505b5091509150613c59828286613c6a565b979650505050505050565b3b151590565b60608315613c79575081612f65565b825115613c895782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8919061495e565b8035612b9f8161527b565b60008083601f840112613cd9578182fd5b50813567ffffffffffffffff811115613cf0578182fd5b6020830191508360208083028501011115613d0a57600080fd5b9250929050565b60008083601f840112613d22578182fd5b50813567ffffffffffffffff811115613d39578182fd5b602083019150836020828501011115613d0a57600080fd5b600060e08284031215613d62578081fd5b60405160e0810181811067ffffffffffffffff82111715613d7f57fe5b60405282358152905080613d9560208401613cbd565b6020820152613da660408401613cbd565b6040820152613db760608401613cbd565b6060820152613dc860808401613cbd565b608082015260a083013560a082015260c083013560c08201525092915050565b600060208284031215613df9578081fd5b8135612f658161527b565b600080600080600060a08688031215613e1b578081fd5b8535613e268161527b565b94506020860135613e368161527b565b93506040860135613e468161527b565b94979396509394606081013594506080013592915050565b600080600080600080600060c0888a031215613e78578182fd5b8735613e838161527b565b96506020880135613e938161527b565b95506040880135613ea38161527b565b9450606088013593506080880135925060a088013567ffffffffffffffff811115613ecc578283fd5b613ed88a828b01613d11565b989b979a50959850939692959293505050565b60008060008060008060008060c0898b031215613f06578081fd5b8835613f118161527b565b97506020890135613f218161527b565b96506040890135955060608901359450608089013567ffffffffffffffff80821115613f4b578283fd5b613f578c838d01613cc8565b909650945060a08b0135915080821115613f6f578283fd5b50613f7c8b828c01613d11565b999c989b5096995094979396929594505050565b600080600080600060808688031215613fa7578081fd5b8535613fb28161527b565b94506020860135935060408601359250606086013567ffffffffffffffff811115613fdb578182fd5b613fe788828901613cc8565b969995985093965092949392505050565b6000806040838503121561400a578182fd5b82356140158161527b565b946020939093013593505050565b600060208284031215614034578081fd5b81518015158114612f65578182fd5b600060208284031215614054578081fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114612f65578182fd5b60008060008060608587031215614098578182fd5b84356140a38161527b565b9350602085013567ffffffffffffffff808211156140bf578384fd5b9086019061010082890312156140d3578384fd5b909350604086013590808211156140e8578384fd5b506140f587828801613d11565b95989497509550505050565b60008060008060808587031215614116578182fd5b84356141218161527b565b935060208501356141318161527b565b93969395505050506040820135916060013590565b600080600080600060808688031215613fa7578283fd5b600080600080600080600060a0888a031215614177578081fd5b87356141828161527b565b96506020880135955060408801359450606088013567ffffffffffffffff808211156141ac578283fd5b6141b88b838c01613cc8565b909650945060808a01359150808211156141d0578283fd5b50613ed88a828b01613d11565b600080604083850312156141ef578182fd5b505080516020909101519092909150565b60008060008060608587031215614215578182fd5b8435935060208501359250604085013567ffffffffffffffff811115614239578283fd5b6140f587828801613d11565b6000806000806000610140868803121561425d578283fd5b6142678787613d51565b945060e086013567ffffffffffffffff811115614282578384fd5b61428e88828901613d11565b96999098509596610100810135966101209091013595509350505050565b60008060008060008061016087890312156142c5578384fd5b6142cf8888613d51565b955060e087013567ffffffffffffffff8111156142ea578485fd5b6142f689828a01613d11565b9096509450506101008701359250610120870135915061014087013561431b8161527b565b809150509295509295509295565b600080600080600080600080610180898b031215614345578182fd5b61434f8a8a613d51565b975060e089013567ffffffffffffffff8082111561436b578384fd5b6143778c838d01613d11565b90995097506101008b013596506101208b013595506101408b0135915061439d8261527b565b9093506101608a01359080821115613f6f578384fd5b6000602082840312156143c4578081fd5b5035919050565b6000602082840312156143dc578081fd5b5051919050565b600080600080606085870312156143f8578182fd5b8435935060208501359250604085013567ffffffffffffffff81111561441c578283fd5b6140f587828801613cc8565b6000815180845261444081602086016020860161524f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60007fffffffff00000000000000000000000000000000000000000000000000000000871682527fffffffffffffffffffffffff0000000000000000000000000000000000000000861660048301527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008560601b166010830152828460248401379101602401908152949350505050565b60007fffffffff000000000000000000000000000000000000000000000000000000008516825282846004840137910160040190815292915050565b6000825161455181846020870161524f565b9190910192915050565b6000835161456d81846020880161524f565b7f50616e696328000000000000000000000000000000000000000000000000000090830190815283516145a781600684016020880161524f565b7f290000000000000000000000000000000000000000000000000000000000000060069290910191820152600701949350505050565b600083516145ef81846020880161524f565b7f556e6b6e6f776e28000000000000000000000000000000000000000000000000908301908152835161462981600884016020880161524f565b7f290000000000000000000000000000000000000000000000000000000000000060089290910191820152600901949350505050565b6000835161467181846020880161524f565b7f4572726f7228000000000000000000000000000000000000000000000000000090830190815283516145a781600684016020880161524f565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152613c5960a0830184614428565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b60008482526040602083015282604083015282846060840137818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b60006101008201905083825282516020830152602083015173ffffffffffffffffffffffffffffffffffffffff80821660408501528060408601511660608501528060608601511660808501528060808601511660a0850152505060a083015160c083015260c083015160e08301529392505050565b918252602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526105d56080830184614428565b600073ffffffffffffffffffffffffffffffffffffffff8088168352808716602084015280861660408401525083606083015260a06080830152613c5960a0830184614428565b600060208252612f656020830184614428565b60208082526013908201527f554e495633523a20656d70747920706f6f6c7300000000000000000000000000604082015260600190565b60208082526016908201527f434c31494e3a2077726f6e67206d73672e76616c756500000000000000000000604082015260600190565b6020808252601b908201527f4c4f503a2074616b696e6720616d6f756e742065786365656465640000000000604082015260600190565b6020808252601c908201527f434c31494e3a206d73672e76616c75652073686f756c64206265203000000000604082015260600190565b6020808252601b908201527f4c4f503a206d616b696e6720616d6f756e742065786365656465640000000000604082015260600190565b60208082526014908201527f4c4f503a2077726f6e67206d73672e76616c7565000000000000000000000000604082015260600190565b6020808252601d908201527f554e495633523a206d73672e76616c75652073686f756c642062652030000000604082015260600190565b60208082526012908201527f4c4f503a206f7264657220657870697265640000000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526012908201527f4c4f503a20626164207369676e61747572650000000000000000000000000000604082015260600190565b60208082526014908201527f455448206465706f7369742072656a6563746564000000000000000000000000604082015260600190565b60208082526011908201527f496e76616c6964206d73672e76616c7565000000000000000000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252818101527f53616665436173743a2076616c7565206d75737420626520706f736974697665604082015260600190565b6020808252601b908201527f52657475726e20616d6f756e74206973206e6f7420656e6f7567680000000000604082015260600190565b6020808252601a908201527f4d696e2072657475726e2073686f756c64206e6f742062652030000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527f57726f6e67207065726d6974206c656e67746800000000000000000000000000604082015260600190565b60208082526015908201527f496e76616c69642072657665727420726561736f6e0000000000000000000000604082015260600190565b60208082526012908201527f4c4f503a2070726976617465206f726465720000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526016908201527f4c4f503a20696e76616c696461746564206f7264657200000000000000000000604082015260600190565b60208082526018908201527f4c4f503a2063616e27742073776170203020616d6f756e740000000000000000604082015260600190565b60208082526028908201527f53616665436173743a2076616c756520646f65736e27742066697420696e206160408201527f6e20696e74323536000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f4c4f503a206f6e65206f6620616d6f756e74732073686f756c64206265203000604082015260600190565b60208082526017908201527f554e495633523a2077726f6e67206d73672e76616c7565000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f554e495633523a206d696e2072657475726e0000000000000000000000000000604082015260600190565b60208082526018908201527f646174612073686f756c64206e6f7420626520656d7074790000000000000000604082015260600190565b9283526020830191909152604082015260600190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615220578283fd5b83018035915067ffffffffffffffff82111561523a578283fd5b602001915036819003821315613d0a57600080fd5b60005b8381101561526a578181015183820152602001615252565b83811115612c475750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461104e57600080fdfea2646970667358221220c5fe87d0c65a660a13d6102c0f94689c378d29658525f6d2f4f521b37cb869a464736f6c63430007060033",
}

// OneInchV4ABI is the input ABI used to generate the binding from.
// Deprecated: Use OneInchV4MetaData.ABI instead.
var OneInchV4ABI = OneInchV4MetaData.ABI

// OneInchV4Bin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use OneInchV4MetaData.Bin instead.
var OneInchV4Bin = OneInchV4MetaData.Bin

// DeployOneInchV4 deploys a new Ethereum contract, binding an instance of OneInchV4 to it.
func DeployOneInchV4(auth *bind.TransactOpts, backend bind.ContractBackend, weth common.Address, _clipperExchange common.Address) (common.Address, *types.Transaction, *OneInchV4, error) {
	parsed, err := OneInchV4MetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(OneInchV4Bin), backend, weth, _clipperExchange)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneInchV4{OneInchV4Caller: OneInchV4Caller{contract: contract}, OneInchV4Transactor: OneInchV4Transactor{contract: contract}, OneInchV4Filterer: OneInchV4Filterer{contract: contract}}, nil
}

// OneInchV4 is an auto generated Go binding around an Ethereum contract.
type OneInchV4 struct {
	OneInchV4Caller     // Read-only binding to the contract
	OneInchV4Transactor // Write-only binding to the contract
	OneInchV4Filterer   // Log filterer for contract events
}

// OneInchV4Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneInchV4Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneInchV4Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneInchV4Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneInchV4Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneInchV4Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneInchV4Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneInchV4Session struct {
	Contract     *OneInchV4        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneInchV4CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneInchV4CallerSession struct {
	Contract *OneInchV4Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// OneInchV4TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneInchV4TransactorSession struct {
	Contract     *OneInchV4Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// OneInchV4Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneInchV4Raw struct {
	Contract *OneInchV4 // Generic contract binding to access the raw methods on
}

// OneInchV4CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneInchV4CallerRaw struct {
	Contract *OneInchV4Caller // Generic read-only contract binding to access the raw methods on
}

// OneInchV4TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneInchV4TransactorRaw struct {
	Contract *OneInchV4Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneInchV4 creates a new instance of OneInchV4, bound to a specific deployed contract.
func NewOneInchV4(address common.Address, backend bind.ContractBackend) (*OneInchV4, error) {
	contract, err := bindOneInchV4(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneInchV4{OneInchV4Caller: OneInchV4Caller{contract: contract}, OneInchV4Transactor: OneInchV4Transactor{contract: contract}, OneInchV4Filterer: OneInchV4Filterer{contract: contract}}, nil
}

// NewOneInchV4Caller creates a new read-only instance of OneInchV4, bound to a specific deployed contract.
func NewOneInchV4Caller(address common.Address, caller bind.ContractCaller) (*OneInchV4Caller, error) {
	contract, err := bindOneInchV4(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneInchV4Caller{contract: contract}, nil
}

// NewOneInchV4Transactor creates a new write-only instance of OneInchV4, bound to a specific deployed contract.
func NewOneInchV4Transactor(address common.Address, transactor bind.ContractTransactor) (*OneInchV4Transactor, error) {
	contract, err := bindOneInchV4(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneInchV4Transactor{contract: contract}, nil
}

// NewOneInchV4Filterer creates a new log filterer instance of OneInchV4, bound to a specific deployed contract.
func NewOneInchV4Filterer(address common.Address, filterer bind.ContractFilterer) (*OneInchV4Filterer, error) {
	contract, err := bindOneInchV4(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneInchV4Filterer{contract: contract}, nil
}

// bindOneInchV4 binds a generic wrapper to an already deployed contract.
func bindOneInchV4(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneInchV4ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneInchV4 *OneInchV4Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneInchV4.Contract.OneInchV4Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneInchV4 *OneInchV4Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneInchV4.Contract.OneInchV4Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneInchV4 *OneInchV4Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneInchV4.Contract.OneInchV4Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneInchV4 *OneInchV4CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneInchV4.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneInchV4 *OneInchV4TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneInchV4.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneInchV4 *OneInchV4TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneInchV4.Contract.contract.Transact(opts, method, params...)
}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_OneInchV4 *OneInchV4Caller) DOMAINSEPARATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _OneInchV4.contract.Call(opts, &out, "DOMAIN_SEPARATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_OneInchV4 *OneInchV4Session) DOMAINSEPARATOR() ([32]byte, error) {
	return _OneInchV4.Contract.DOMAINSEPARATOR(&_OneInchV4.CallOpts)
}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_OneInchV4 *OneInchV4CallerSession) DOMAINSEPARATOR() ([32]byte, error) {
	return _OneInchV4.Contract.DOMAINSEPARATOR(&_OneInchV4.CallOpts)
}

// LIMITORDERRFQTYPEHASH is a free data retrieval call binding the contract method 0x06bf53d0.
//
// Solidity: function LIMIT_ORDER_RFQ_TYPEHASH() view returns(bytes32)
func (_OneInchV4 *OneInchV4Caller) LIMITORDERRFQTYPEHASH(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _OneInchV4.contract.Call(opts, &out, "LIMIT_ORDER_RFQ_TYPEHASH")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// LIMITORDERRFQTYPEHASH is a free data retrieval call binding the contract method 0x06bf53d0.
//
// Solidity: function LIMIT_ORDER_RFQ_TYPEHASH() view returns(bytes32)
func (_OneInchV4 *OneInchV4Session) LIMITORDERRFQTYPEHASH() ([32]byte, error) {
	return _OneInchV4.Contract.LIMITORDERRFQTYPEHASH(&_OneInchV4.CallOpts)
}

// LIMITORDERRFQTYPEHASH is a free data retrieval call binding the contract method 0x06bf53d0.
//
// Solidity: function LIMIT_ORDER_RFQ_TYPEHASH() view returns(bytes32)
func (_OneInchV4 *OneInchV4CallerSession) LIMITORDERRFQTYPEHASH() ([32]byte, error) {
	return _OneInchV4.Contract.LIMITORDERRFQTYPEHASH(&_OneInchV4.CallOpts)
}

// InvalidatorForOrderRFQ is a free data retrieval call binding the contract method 0x56f16124.
//
// Solidity: function invalidatorForOrderRFQ(address maker, uint256 slot) view returns(uint256)
func (_OneInchV4 *OneInchV4Caller) InvalidatorForOrderRFQ(opts *bind.CallOpts, maker common.Address, slot *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _OneInchV4.contract.Call(opts, &out, "invalidatorForOrderRFQ", maker, slot)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InvalidatorForOrderRFQ is a free data retrieval call binding the contract method 0x56f16124.
//
// Solidity: function invalidatorForOrderRFQ(address maker, uint256 slot) view returns(uint256)
func (_OneInchV4 *OneInchV4Session) InvalidatorForOrderRFQ(maker common.Address, slot *big.Int) (*big.Int, error) {
	return _OneInchV4.Contract.InvalidatorForOrderRFQ(&_OneInchV4.CallOpts, maker, slot)
}

// InvalidatorForOrderRFQ is a free data retrieval call binding the contract method 0x56f16124.
//
// Solidity: function invalidatorForOrderRFQ(address maker, uint256 slot) view returns(uint256)
func (_OneInchV4 *OneInchV4CallerSession) InvalidatorForOrderRFQ(maker common.Address, slot *big.Int) (*big.Int, error) {
	return _OneInchV4.Contract.InvalidatorForOrderRFQ(&_OneInchV4.CallOpts, maker, slot)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OneInchV4 *OneInchV4Caller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OneInchV4.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OneInchV4 *OneInchV4Session) Owner() (common.Address, error) {
	return _OneInchV4.Contract.Owner(&_OneInchV4.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OneInchV4 *OneInchV4CallerSession) Owner() (common.Address, error) {
	return _OneInchV4.Contract.Owner(&_OneInchV4.CallOpts)
}

// CancelOrderRFQ is a paid mutator transaction binding the contract method 0x825caba1.
//
// Solidity: function cancelOrderRFQ(uint256 orderInfo) returns()
func (_OneInchV4 *OneInchV4Transactor) CancelOrderRFQ(opts *bind.TransactOpts, orderInfo *big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "cancelOrderRFQ", orderInfo)
}

// CancelOrderRFQ is a paid mutator transaction binding the contract method 0x825caba1.
//
// Solidity: function cancelOrderRFQ(uint256 orderInfo) returns()
func (_OneInchV4 *OneInchV4Session) CancelOrderRFQ(orderInfo *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.CancelOrderRFQ(&_OneInchV4.TransactOpts, orderInfo)
}

// CancelOrderRFQ is a paid mutator transaction binding the contract method 0x825caba1.
//
// Solidity: function cancelOrderRFQ(uint256 orderInfo) returns()
func (_OneInchV4 *OneInchV4TransactorSession) CancelOrderRFQ(orderInfo *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.CancelOrderRFQ(&_OneInchV4.TransactOpts, orderInfo)
}

// ClipperSwap is a paid mutator transaction binding the contract method 0xb0431182.
//
// Solidity: function clipperSwap(address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) ClipperSwap(opts *bind.TransactOpts, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "clipperSwap", srcToken, dstToken, amount, minReturn)
}

// ClipperSwap is a paid mutator transaction binding the contract method 0xb0431182.
//
// Solidity: function clipperSwap(address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) ClipperSwap(srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwap(&_OneInchV4.TransactOpts, srcToken, dstToken, amount, minReturn)
}

// ClipperSwap is a paid mutator transaction binding the contract method 0xb0431182.
//
// Solidity: function clipperSwap(address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) ClipperSwap(srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwap(&_OneInchV4.TransactOpts, srcToken, dstToken, amount, minReturn)
}

// ClipperSwapTo is a paid mutator transaction binding the contract method 0x9994dd15.
//
// Solidity: function clipperSwapTo(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) ClipperSwapTo(opts *bind.TransactOpts, recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "clipperSwapTo", recipient, srcToken, dstToken, amount, minReturn)
}

// ClipperSwapTo is a paid mutator transaction binding the contract method 0x9994dd15.
//
// Solidity: function clipperSwapTo(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) ClipperSwapTo(recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwapTo(&_OneInchV4.TransactOpts, recipient, srcToken, dstToken, amount, minReturn)
}

// ClipperSwapTo is a paid mutator transaction binding the contract method 0x9994dd15.
//
// Solidity: function clipperSwapTo(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) ClipperSwapTo(recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwapTo(&_OneInchV4.TransactOpts, recipient, srcToken, dstToken, amount, minReturn)
}

// ClipperSwapToWithPermit is a paid mutator transaction binding the contract method 0xd6a92a5d.
//
// Solidity: function clipperSwapToWithPermit(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) ClipperSwapToWithPermit(opts *bind.TransactOpts, recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "clipperSwapToWithPermit", recipient, srcToken, dstToken, amount, minReturn, permit)
}

// ClipperSwapToWithPermit is a paid mutator transaction binding the contract method 0xd6a92a5d.
//
// Solidity: function clipperSwapToWithPermit(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) ClipperSwapToWithPermit(recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwapToWithPermit(&_OneInchV4.TransactOpts, recipient, srcToken, dstToken, amount, minReturn, permit)
}

// ClipperSwapToWithPermit is a paid mutator transaction binding the contract method 0xd6a92a5d.
//
// Solidity: function clipperSwapToWithPermit(address recipient, address srcToken, address dstToken, uint256 amount, uint256 minReturn, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) ClipperSwapToWithPermit(recipient common.Address, srcToken common.Address, dstToken common.Address, amount *big.Int, minReturn *big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.ClipperSwapToWithPermit(&_OneInchV4.TransactOpts, recipient, srcToken, dstToken, amount, minReturn, permit)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_OneInchV4 *OneInchV4Transactor) Destroy(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "destroy")
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_OneInchV4 *OneInchV4Session) Destroy() (*types.Transaction, error) {
	return _OneInchV4.Contract.Destroy(&_OneInchV4.TransactOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x83197ef0.
//
// Solidity: function destroy() returns()
func (_OneInchV4 *OneInchV4TransactorSession) Destroy() (*types.Transaction, error) {
	return _OneInchV4.Contract.Destroy(&_OneInchV4.TransactOpts)
}

// FillOrderRFQ is a paid mutator transaction binding the contract method 0xd0a3b665.
//
// Solidity: function fillOrderRFQ((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Transactor) FillOrderRFQ(opts *bind.TransactOpts, order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "fillOrderRFQ", order, signature, makingAmount, takingAmount)
}

// FillOrderRFQ is a paid mutator transaction binding the contract method 0xd0a3b665.
//
// Solidity: function fillOrderRFQ((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Session) FillOrderRFQ(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQ(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount)
}

// FillOrderRFQ is a paid mutator transaction binding the contract method 0xd0a3b665.
//
// Solidity: function fillOrderRFQ((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4TransactorSession) FillOrderRFQ(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQ(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount)
}

// FillOrderRFQTo is a paid mutator transaction binding the contract method 0xbaba5855.
//
// Solidity: function fillOrderRFQTo((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Transactor) FillOrderRFQTo(opts *bind.TransactOpts, order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "fillOrderRFQTo", order, signature, makingAmount, takingAmount, target)
}

// FillOrderRFQTo is a paid mutator transaction binding the contract method 0xbaba5855.
//
// Solidity: function fillOrderRFQTo((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Session) FillOrderRFQTo(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQTo(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount, target)
}

// FillOrderRFQTo is a paid mutator transaction binding the contract method 0xbaba5855.
//
// Solidity: function fillOrderRFQTo((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target) payable returns(uint256, uint256)
func (_OneInchV4 *OneInchV4TransactorSession) FillOrderRFQTo(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQTo(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount, target)
}

// FillOrderRFQToWithPermit is a paid mutator transaction binding the contract method 0x4cc4a27b.
//
// Solidity: function fillOrderRFQToWithPermit((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target, bytes permit) returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Transactor) FillOrderRFQToWithPermit(opts *bind.TransactOpts, order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "fillOrderRFQToWithPermit", order, signature, makingAmount, takingAmount, target, permit)
}

// FillOrderRFQToWithPermit is a paid mutator transaction binding the contract method 0x4cc4a27b.
//
// Solidity: function fillOrderRFQToWithPermit((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target, bytes permit) returns(uint256, uint256)
func (_OneInchV4 *OneInchV4Session) FillOrderRFQToWithPermit(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQToWithPermit(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount, target, permit)
}

// FillOrderRFQToWithPermit is a paid mutator transaction binding the contract method 0x4cc4a27b.
//
// Solidity: function fillOrderRFQToWithPermit((uint256,address,address,address,address,uint256,uint256) order, bytes signature, uint256 makingAmount, uint256 takingAmount, address target, bytes permit) returns(uint256, uint256)
func (_OneInchV4 *OneInchV4TransactorSession) FillOrderRFQToWithPermit(order LimitOrderProtocolRFQOrderRFQ, signature []byte, makingAmount *big.Int, takingAmount *big.Int, target common.Address, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.FillOrderRFQToWithPermit(&_OneInchV4.TransactOpts, order, signature, makingAmount, takingAmount, target, permit)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_OneInchV4 *OneInchV4Transactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_OneInchV4 *OneInchV4Session) RenounceOwnership() (*types.Transaction, error) {
	return _OneInchV4.Contract.RenounceOwnership(&_OneInchV4.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_OneInchV4 *OneInchV4TransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _OneInchV4.Contract.RenounceOwnership(&_OneInchV4.TransactOpts)
}

// RescueFunds is a paid mutator transaction binding the contract method 0x78e3214f.
//
// Solidity: function rescueFunds(address token, uint256 amount) returns()
func (_OneInchV4 *OneInchV4Transactor) RescueFunds(opts *bind.TransactOpts, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "rescueFunds", token, amount)
}

// RescueFunds is a paid mutator transaction binding the contract method 0x78e3214f.
//
// Solidity: function rescueFunds(address token, uint256 amount) returns()
func (_OneInchV4 *OneInchV4Session) RescueFunds(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.RescueFunds(&_OneInchV4.TransactOpts, token, amount)
}

// RescueFunds is a paid mutator transaction binding the contract method 0x78e3214f.
//
// Solidity: function rescueFunds(address token, uint256 amount) returns()
func (_OneInchV4 *OneInchV4TransactorSession) RescueFunds(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.RescueFunds(&_OneInchV4.TransactOpts, token, amount)
}

// Swap is a paid mutator transaction binding the contract method 0x7c025200.
//
// Solidity: function swap(address caller, (address,address,address,address,uint256,uint256,uint256,bytes) desc, bytes data) payable returns(uint256 returnAmount, uint256 spentAmount, uint256 gasLeft)
func (_OneInchV4 *OneInchV4Transactor) Swap(opts *bind.TransactOpts, caller common.Address, desc AggregationRouterV4SwapDescription, data []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "swap", caller, desc, data)
}

// Swap is a paid mutator transaction binding the contract method 0x7c025200.
//
// Solidity: function swap(address caller, (address,address,address,address,uint256,uint256,uint256,bytes) desc, bytes data) payable returns(uint256 returnAmount, uint256 spentAmount, uint256 gasLeft)
func (_OneInchV4 *OneInchV4Session) Swap(caller common.Address, desc AggregationRouterV4SwapDescription, data []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.Swap(&_OneInchV4.TransactOpts, caller, desc, data)
}

// Swap is a paid mutator transaction binding the contract method 0x7c025200.
//
// Solidity: function swap(address caller, (address,address,address,address,uint256,uint256,uint256,bytes) desc, bytes data) payable returns(uint256 returnAmount, uint256 spentAmount, uint256 gasLeft)
func (_OneInchV4 *OneInchV4TransactorSession) Swap(caller common.Address, desc AggregationRouterV4SwapDescription, data []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.Swap(&_OneInchV4.TransactOpts, caller, desc, data)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_OneInchV4 *OneInchV4Transactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_OneInchV4 *OneInchV4Session) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _OneInchV4.Contract.TransferOwnership(&_OneInchV4.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_OneInchV4 *OneInchV4TransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _OneInchV4.Contract.TransferOwnership(&_OneInchV4.TransactOpts, newOwner)
}

// UniswapV3Swap is a paid mutator transaction binding the contract method 0xe449022e.
//
// Solidity: function uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) UniswapV3Swap(opts *bind.TransactOpts, amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "uniswapV3Swap", amount, minReturn, pools)
}

// UniswapV3Swap is a paid mutator transaction binding the contract method 0xe449022e.
//
// Solidity: function uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) UniswapV3Swap(amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3Swap(&_OneInchV4.TransactOpts, amount, minReturn, pools)
}

// UniswapV3Swap is a paid mutator transaction binding the contract method 0xe449022e.
//
// Solidity: function uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) UniswapV3Swap(amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3Swap(&_OneInchV4.TransactOpts, amount, minReturn, pools)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes ) returns()
func (_OneInchV4 *OneInchV4Transactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, arg2 []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, arg2)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes ) returns()
func (_OneInchV4 *OneInchV4Session) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, arg2 []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapCallback(&_OneInchV4.TransactOpts, amount0Delta, amount1Delta, arg2)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes ) returns()
func (_OneInchV4 *OneInchV4TransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, arg2 []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapCallback(&_OneInchV4.TransactOpts, amount0Delta, amount1Delta, arg2)
}

// UniswapV3SwapTo is a paid mutator transaction binding the contract method 0xbc80f1a8.
//
// Solidity: function uniswapV3SwapTo(address recipient, uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) UniswapV3SwapTo(opts *bind.TransactOpts, recipient common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "uniswapV3SwapTo", recipient, amount, minReturn, pools)
}

// UniswapV3SwapTo is a paid mutator transaction binding the contract method 0xbc80f1a8.
//
// Solidity: function uniswapV3SwapTo(address recipient, uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) UniswapV3SwapTo(recipient common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapTo(&_OneInchV4.TransactOpts, recipient, amount, minReturn, pools)
}

// UniswapV3SwapTo is a paid mutator transaction binding the contract method 0xbc80f1a8.
//
// Solidity: function uniswapV3SwapTo(address recipient, uint256 amount, uint256 minReturn, uint256[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) UniswapV3SwapTo(recipient common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapTo(&_OneInchV4.TransactOpts, recipient, amount, minReturn, pools)
}

// UniswapV3SwapToWithPermit is a paid mutator transaction binding the contract method 0x2521b930.
//
// Solidity: function uniswapV3SwapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) UniswapV3SwapToWithPermit(opts *bind.TransactOpts, recipient common.Address, srcToken common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "uniswapV3SwapToWithPermit", recipient, srcToken, amount, minReturn, pools, permit)
}

// UniswapV3SwapToWithPermit is a paid mutator transaction binding the contract method 0x2521b930.
//
// Solidity: function uniswapV3SwapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) UniswapV3SwapToWithPermit(recipient common.Address, srcToken common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapToWithPermit(&_OneInchV4.TransactOpts, recipient, srcToken, amount, minReturn, pools, permit)
}

// UniswapV3SwapToWithPermit is a paid mutator transaction binding the contract method 0x2521b930.
//
// Solidity: function uniswapV3SwapToWithPermit(address recipient, address srcToken, uint256 amount, uint256 minReturn, uint256[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) UniswapV3SwapToWithPermit(recipient common.Address, srcToken common.Address, amount *big.Int, minReturn *big.Int, pools []*big.Int, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UniswapV3SwapToWithPermit(&_OneInchV4.TransactOpts, recipient, srcToken, amount, minReturn, pools, permit)
}

// Unoswap is a paid mutator transaction binding the contract method 0x2e95b6c8.
//
// Solidity: function unoswap(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) Unoswap(opts *bind.TransactOpts, srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "unoswap", srcToken, amount, minReturn, pools)
}

// Unoswap is a paid mutator transaction binding the contract method 0x2e95b6c8.
//
// Solidity: function unoswap(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) Unoswap(srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.Unoswap(&_OneInchV4.TransactOpts, srcToken, amount, minReturn, pools)
}

// Unoswap is a paid mutator transaction binding the contract method 0x2e95b6c8.
//
// Solidity: function unoswap(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools) payable returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) Unoswap(srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.Unoswap(&_OneInchV4.TransactOpts, srcToken, amount, minReturn, pools)
}

// UnoswapWithPermit is a paid mutator transaction binding the contract method 0xa1251d75.
//
// Solidity: function unoswapWithPermit(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Transactor) UnoswapWithPermit(opts *bind.TransactOpts, srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.contract.Transact(opts, "unoswapWithPermit", srcToken, amount, minReturn, pools, permit)
}

// UnoswapWithPermit is a paid mutator transaction binding the contract method 0xa1251d75.
//
// Solidity: function unoswapWithPermit(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4Session) UnoswapWithPermit(srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UnoswapWithPermit(&_OneInchV4.TransactOpts, srcToken, amount, minReturn, pools, permit)
}

// UnoswapWithPermit is a paid mutator transaction binding the contract method 0xa1251d75.
//
// Solidity: function unoswapWithPermit(address srcToken, uint256 amount, uint256 minReturn, bytes32[] pools, bytes permit) returns(uint256 returnAmount)
func (_OneInchV4 *OneInchV4TransactorSession) UnoswapWithPermit(srcToken common.Address, amount *big.Int, minReturn *big.Int, pools [][32]byte, permit []byte) (*types.Transaction, error) {
	return _OneInchV4.Contract.UnoswapWithPermit(&_OneInchV4.TransactOpts, srcToken, amount, minReturn, pools, permit)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_OneInchV4 *OneInchV4Transactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneInchV4.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_OneInchV4 *OneInchV4Session) Receive() (*types.Transaction, error) {
	return _OneInchV4.Contract.Receive(&_OneInchV4.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_OneInchV4 *OneInchV4TransactorSession) Receive() (*types.Transaction, error) {
	return _OneInchV4.Contract.Receive(&_OneInchV4.TransactOpts)
}

// OneInchV4OrderFilledRFQIterator is returned from FilterOrderFilledRFQ and is used to iterate over the raw logs and unpacked data for OrderFilledRFQ events raised by the OneInchV4 contract.
type OneInchV4OrderFilledRFQIterator struct {
	Event *OneInchV4OrderFilledRFQ // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OneInchV4OrderFilledRFQIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OneInchV4OrderFilledRFQ)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OneInchV4OrderFilledRFQ)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OneInchV4OrderFilledRFQIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OneInchV4OrderFilledRFQIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OneInchV4OrderFilledRFQ represents a OrderFilledRFQ event raised by the OneInchV4 contract.
type OneInchV4OrderFilledRFQ struct {
	OrderHash    [32]byte
	MakingAmount *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterOrderFilledRFQ is a free log retrieval operation binding the contract event 0xc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca78127.
//
// Solidity: event OrderFilledRFQ(bytes32 orderHash, uint256 makingAmount)
func (_OneInchV4 *OneInchV4Filterer) FilterOrderFilledRFQ(opts *bind.FilterOpts) (*OneInchV4OrderFilledRFQIterator, error) {

	logs, sub, err := _OneInchV4.contract.FilterLogs(opts, "OrderFilledRFQ")
	if err != nil {
		return nil, err
	}
	return &OneInchV4OrderFilledRFQIterator{contract: _OneInchV4.contract, event: "OrderFilledRFQ", logs: logs, sub: sub}, nil
}

// WatchOrderFilledRFQ is a free log subscription operation binding the contract event 0xc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca78127.
//
// Solidity: event OrderFilledRFQ(bytes32 orderHash, uint256 makingAmount)
func (_OneInchV4 *OneInchV4Filterer) WatchOrderFilledRFQ(opts *bind.WatchOpts, sink chan<- *OneInchV4OrderFilledRFQ) (event.Subscription, error) {

	logs, sub, err := _OneInchV4.contract.WatchLogs(opts, "OrderFilledRFQ")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OneInchV4OrderFilledRFQ)
				if err := _OneInchV4.contract.UnpackLog(event, "OrderFilledRFQ", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderFilledRFQ is a log parse operation binding the contract event 0xc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca78127.
//
// Solidity: event OrderFilledRFQ(bytes32 orderHash, uint256 makingAmount)
func (_OneInchV4 *OneInchV4Filterer) ParseOrderFilledRFQ(log types.Log) (*OneInchV4OrderFilledRFQ, error) {
	event := new(OneInchV4OrderFilledRFQ)
	if err := _OneInchV4.contract.UnpackLog(event, "OrderFilledRFQ", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OneInchV4OwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the OneInchV4 contract.
type OneInchV4OwnershipTransferredIterator struct {
	Event *OneInchV4OwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OneInchV4OwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OneInchV4OwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OneInchV4OwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OneInchV4OwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OneInchV4OwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OneInchV4OwnershipTransferred represents a OwnershipTransferred event raised by the OneInchV4 contract.
type OneInchV4OwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_OneInchV4 *OneInchV4Filterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*OneInchV4OwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _OneInchV4.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &OneInchV4OwnershipTransferredIterator{contract: _OneInchV4.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_OneInchV4 *OneInchV4Filterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *OneInchV4OwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _OneInchV4.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OneInchV4OwnershipTransferred)
				if err := _OneInchV4.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_OneInchV4 *OneInchV4Filterer) ParseOwnershipTransferred(log types.Log) (*OneInchV4OwnershipTransferred, error) {
	event := new(OneInchV4OwnershipTransferred)
	if err := _OneInchV4.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
